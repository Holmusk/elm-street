name: CI

on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        cabal: ["3.10.1.0"]
        ghc:
          - 9.0.2
          - 9.2.8
          - 9.4.8
          - 9.6.5
          - 9.8.2
        include:
          # Test only with latest GHC on windows and macOS
          - os: macOS-latest
            ghc: 9.8.2
          - os: windows-latest
            ghc: 9.8.2

    steps:
      - uses: actions/checkout@v4
        if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

      - uses: haskell-actions/setup@v2
        id: setup-haskell-cabal
        name: Setup Haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Configure
        run: cabal configure --enable-tests --enable-benchmarks --test-show-details=direct

      - name: Freeze
        run: cabal freeze

      - uses: actions/cache@v4
        name: Cache ~/.cabal/store
        with:
          path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Install dependencies
        run: cabal build all --only-dependencies

      - name: Build
        run: cabal build all

      - name: Test
        run: cabal test all

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: [2.15.5]
        ghc: [9.6.5]

    steps:
      - uses: actions/checkout@v4
        if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

      - uses: haskell-actions/setup@v2
        name: Setup Haskell Stack
        with:
          ghc-version: ${{ matrix.ghc }}
          stack-version: ${{ matrix.stack }}

      - uses: actions/cache@v3
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ matrix.ghc }}-stack

      - name: Install dependencies
        run: stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks --only-dependencies

      - name: Build
        run: stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

      - name: Test
        run: stack test --system-ghc

  frontend:
    name: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Build and test
        working-directory: frontend
        run: |
          npm install -g create-elm-app@5.22.0
          elm-app build
          elm-app test
